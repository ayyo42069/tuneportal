name: Push Files to FTP

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 0 * * *'

jobs:
  pull-ftp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp

      - name: Mirror FTP directory to workspace (Secure)
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          REMOTE_PATH: "/"
          LOCAL_PATH: "./ftp-download"
        run: |
          mkdir -p $LOCAL_PATH
          lftp -u "$FTP_USERNAME","$FTP_PASSWORD" ftp://$FTP_SERVER <<EOF
          mirror --verbose \
            --exclude-glob .env* \
            --exclude-glob .gitignore \
            --exclude-glob .htaccess \
            --exclude-glob .git/ \
            --exclude-glob *.bak \
            --exclude-glob *.ftpqouta \
            --exclude-glob *.zip \
            --exclude-glob *.exe \
            --exclude-glob vendor/ \
            $REMOTE_PATH $LOCAL_PATH
          quit
          EOF

      - name: Copy downloaded files to repository root
        run: |
          # Copy while preserving existing sensitive files
          cp -rn ftp-download/* . || true

      - name: Secure Commit changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Add all changes then explicitly reset sensitive files
          git add .
          git reset -- .env* .gitignore .htaccess *.bak
          
          if ! git diff-index --quiet HEAD; then
            git commit -m "Secure update from FTP on $(date)"
          else
            echo "No changes detected."
          fi

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
